/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as EstimationsLayoutImport } from './routes/estimations/_layout'
import { Route as EstimationsLayoutIndexImport } from './routes/estimations/_layout/index'
import { Route as EstimationsLayoutIdIndexImport } from './routes/estimations/_layout/$id/index'

// Create Virtual Routes

const EstimationsImport = createFileRoute('/estimations')()

// Create/Update Routes

const EstimationsRoute = EstimationsImport.update({
  path: '/estimations',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EstimationsLayoutRoute = EstimationsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => EstimationsRoute,
} as any)

const EstimationsLayoutIndexRoute = EstimationsLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => EstimationsLayoutRoute,
} as any)

const EstimationsLayoutIdIndexRoute = EstimationsLayoutIdIndexImport.update({
  path: '/$id/',
  getParentRoute: () => EstimationsLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/estimations': {
      id: '/estimations'
      path: '/estimations'
      fullPath: '/estimations'
      preLoaderRoute: typeof EstimationsImport
      parentRoute: typeof rootRoute
    }
    '/estimations/_layout': {
      id: '/estimations/_layout'
      path: '/estimations'
      fullPath: '/estimations'
      preLoaderRoute: typeof EstimationsLayoutImport
      parentRoute: typeof EstimationsRoute
    }
    '/estimations/_layout/': {
      id: '/estimations/_layout/'
      path: '/'
      fullPath: '/estimations/'
      preLoaderRoute: typeof EstimationsLayoutIndexImport
      parentRoute: typeof EstimationsLayoutImport
    }
    '/estimations/_layout/$id/': {
      id: '/estimations/_layout/$id/'
      path: '/$id'
      fullPath: '/estimations/$id'
      preLoaderRoute: typeof EstimationsLayoutIdIndexImport
      parentRoute: typeof EstimationsLayoutImport
    }
  }
}

// Create and export the route tree

interface EstimationsLayoutRouteChildren {
  EstimationsLayoutIndexRoute: typeof EstimationsLayoutIndexRoute
  EstimationsLayoutIdIndexRoute: typeof EstimationsLayoutIdIndexRoute
}

const EstimationsLayoutRouteChildren: EstimationsLayoutRouteChildren = {
  EstimationsLayoutIndexRoute: EstimationsLayoutIndexRoute,
  EstimationsLayoutIdIndexRoute: EstimationsLayoutIdIndexRoute,
}

const EstimationsLayoutRouteWithChildren =
  EstimationsLayoutRoute._addFileChildren(EstimationsLayoutRouteChildren)

interface EstimationsRouteChildren {
  EstimationsLayoutRoute: typeof EstimationsLayoutRouteWithChildren
}

const EstimationsRouteChildren: EstimationsRouteChildren = {
  EstimationsLayoutRoute: EstimationsLayoutRouteWithChildren,
}

const EstimationsRouteWithChildren = EstimationsRoute._addFileChildren(
  EstimationsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/estimations': typeof EstimationsLayoutRouteWithChildren
  '/estimations/': typeof EstimationsLayoutIndexRoute
  '/estimations/$id': typeof EstimationsLayoutIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/estimations': typeof EstimationsLayoutIndexRoute
  '/estimations/$id': typeof EstimationsLayoutIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/estimations': typeof EstimationsRouteWithChildren
  '/estimations/_layout': typeof EstimationsLayoutRouteWithChildren
  '/estimations/_layout/': typeof EstimationsLayoutIndexRoute
  '/estimations/_layout/$id/': typeof EstimationsLayoutIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/estimations' | '/estimations/' | '/estimations/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/estimations' | '/estimations/$id'
  id:
    | '__root__'
    | '/'
    | '/estimations'
    | '/estimations/_layout'
    | '/estimations/_layout/'
    | '/estimations/_layout/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EstimationsRoute: typeof EstimationsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EstimationsRoute: EstimationsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/estimations"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/estimations": {
      "filePath": "estimations",
      "children": [
        "/estimations/_layout"
      ]
    },
    "/estimations/_layout": {
      "filePath": "estimations/_layout.tsx",
      "parent": "/estimations",
      "children": [
        "/estimations/_layout/",
        "/estimations/_layout/$id/"
      ]
    },
    "/estimations/_layout/": {
      "filePath": "estimations/_layout/index.tsx",
      "parent": "/estimations/_layout"
    },
    "/estimations/_layout/$id/": {
      "filePath": "estimations/_layout/$id/index.tsx",
      "parent": "/estimations/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
